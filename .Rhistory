return(inv)
}
data <- x$get()
inv <- solve(data,...)
x$setinverse(inv)
}
cacheSolve(makeCacheMatrix(matrix(1:4,2,2)))
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinverse <- function(solve) inv <<- solve
getinverse <- function() inv
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## cacheSolve computes the inverse of the special "matrix"
## returned by makeCacheMatrix.
## If the inverse has already been calculated
## (and the matrix has not changed),
## then the cachesolve should retrieve the inverse from the cache.
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinverse()
if(!is.null(inv)) {
message("getting cached data")
return(inv)
}
data <- x$get()
inv <- solve(data,...)
x$setinverse(inv)
inv
}
cacheSolve(makeCacheMatrix(matrix(1:4,2,2)))
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
setwd("D:/Coursera/ProgrammingAssignment3")
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "numeric")
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
state<-c("TX")
hospitalgroup<-split(outcome, outcome$State)
statehospital<-hospitalgroup[[state[1]]
]
statehospital[,17]<-as.numeric(statehospital[,17])
com<-complete.cases(statehospital[,17])
statehospital<-statehospital[com,]
bestrow<-logical(nrow(statehospital))
ii <- order(x <- c(1,1,3:1,1:4,3), y <- c(9,9:1), z <- c(2,1:9))
rbind(x, y, z)[,ii]
x<-c(a,c)
x<-("a","c")
x<-c("a","c")
x<-c("c":"a")
ii <- order(x <- c("a","a","c","b","a","a","b","c","d","c"), y <- c(9,9:1), z <- c(2,1:9))
rbind(x, y, z)[,ii]
ii <- order(x <- c("a","a","c","b","a","a","b","c","d","c"), y <- c(9,9:1), z <- c(2,1:9),decreasing = true)
ii <- order(x <- c("a","a","c","b","a","a","b","c","d","c"), y <- c(9,9:1), z <- c(2,1:9),decreasing = TRUE)
rbind(x, y, z)[,ii]
x<-1
class(x)
m<-11
statehospital[,m]
statehospital[,11]
cbind(x, y, z)[,ii]
cbind(x, y, z)[ii,]
cbind(statehospital$Hospital.Name,statehospital$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack)
rankh<-cbind(statehospital[,2],statehospital[,11])
i<-order(cbind[,1],decreasing = TRUE)
i<-order(rankh[,1],rankh[,2],decreasing = TRUE)
rankh[,i]
cbind(statehospital[,2],statehospital[,11])[,i]
i<-order(statehospital[,2],statehospital[,11],decreasing = TRUE)
cbind(statehospital[,2],statehospital[,11])[,i]
cbind(statehospital[,2],statehospital[,11])[i,]
i<-order(statehospital[,2],decreasing = TRUE)
cbind(statehospital[,2],statehospital[,11])[i,]
rankhospital <- function(state, measure, num = "best") {
## Read outcome data
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
## Return hospital name in that state with the given rank
## 30-day death rate
hospitalgroup<-split(outcome, outcome$State)
statehospital<-hospitalgroup[[state]]
if(measure=="heart attack"){m<-11}
if(measure=="heart failure"){m<-17}
if(measure=="pneumonia"){m<-23}
if(num == "best"){num<-1}
if(num == "worst"){num<-nrow(statehospital)}
statehospital[,m]<-as.numeric(statehospital[,m])## coercion
com<-complete.cases(statehospital[,m])##remove NA values
statehospital<-statehospital[com,]
## decreasing by hospital name
i<-order(statehospital[,2],decreasing = TRUE)
rankfirst<-cbind(statehospital[,2],statehospital[,m])[i,]
## increasing by measure
ii<-order(rankfirst[[,2]])
rankone<-rankfirst[ii,]
rankone[num,1]
}
rankhospital <- function(state, measure, num = "best") {
## Read outcome data
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
## Return hospital name in that state with the given rank
## 30-day death rate
hospitalgroup<-split(outcome, outcome$State)
statehospital<-hospitalgroup[[state]]
if(measure=="heart attack"){m<-11}
if(measure=="heart failure"){m<-17}
if(measure=="pneumonia"){m<-23}
if(num == "best"){num<-1}
if(num == "worst"){num<-nrow(statehospital)}
statehospital[,m]<-as.numeric(statehospital[,m])## coercion
com<-complete.cases(statehospital[,m])##remove NA values
statehospital<-statehospital[com,]
## decreasing by hospital name
i<-order(statehospital[,2],decreasing = TRUE)
rankfirst<-cbind(statehospital[,2],statehospital[,m])[i,]
## increasing by measure
ii<-order(rankfirst[[,2]])
rankone<-rankfirst[ii,]
rankone[num,1]
}
rankhospital("TX", "heart failure", 4)
rankhospital <- function(state, measure, num = "best") {
## Read outcome data
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
## Return hospital name in that state with the given rank
## 30-day death rate
hospitalgroup<-split(outcome, outcome$State)
statehospital<-hospitalgroup[[state]]
if(measure=="heart attack"){m<-11}
if(measure=="heart failure"){m<-17}
if(measure=="pneumonia"){m<-23}
if(num == "best"){num<-1}
if(num == "worst"){num<-nrow(statehospital)}
statehospital[,m]<-as.numeric(statehospital[,m])## coercion
com<-complete.cases(statehospital[,m])##remove NA values
statehospital<-statehospital[com,]
## decreasing by hospital name
i<-order(statehospital[,2],decreasing = TRUE)
rankfirst<-cbind(statehospital[,2],statehospital[,m])[i,]
## increasing by measure
ii<-order(rankfirst[,2])
rankone<-rankfirst[ii,]
rankone[num,1]
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
hospitalgroup<-split(outcome, outcome$State)
statehospital<-hospitalgroup$TX
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
hospitalgroup<-split(outcome, outcome$State)
statehospital<-hospitalgroup$TX
statehospital[,17]<-as.numeric(statehospital[,17])## coercion
com<-complete.cases(statehospital[,17])##remove NA values
statehospital<-statehospital[com,]
i<-order(statehospital[,2],statehospital[,m],decreasing = TRUE)
rankfirst<-cbind(statehospital[,2],statehospital[,m])[i,]
i<-order(statehospital[,2],statehospital[,17],decreasing = TRUE)
rankfirst<-cbind(statehospital[,2],statehospital[,17])[i,]
ii<-order(rankfirst[,2],rankfirst[,1])
rankone<-rankfirst[ii,]
head(rankone)
statehospital[,17]
cbind(statehospital[,2],statehospital[,17])[order(statehospital[,2],-statehospital[,17])]
cbind(statehospital[,2],statehospital[,17])[order(statehospital[,2],-statehospital[,17]),]
cbind(statehospital[,17],statehospital[,2])[order(statehospital[,17],statehospital[,2]),]
rankhospital <- function(state, measure, num = "best") {
## Read outcome data
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
## Return hospital name in that state with the given rank
## 30-day death rate
hospitalgroup<-split(outcome, outcome$State)
statehospital<-hospitalgroup[[state]]
if(measure=="heart attack"){m<-11}
if(measure=="heart failure"){m<-17}
if(measure=="pneumonia"){m<-23}
if(num == "best"){num<-1}
if(num == "worst"){num<-nrow(statehospital)}
statehospital[,m]<-as.numeric(statehospital[,m])## coercion
com<-complete.cases(statehospital[,m])##remove NA values
statehospital<-statehospital[com,]
i<-order(statehospital[,m],statehospital[,2])
rankone<-cbind(statehospital[,m],statehospital[,2])[i,]
rankone[num,1]
}
rankhospital("TX", "heart failure", 4)
rankhospital <- function(state, measure, num = "best") {
## Read outcome data
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
## Return hospital name in that state with the given rank
## 30-day death rate
hospitalgroup<-split(outcome, outcome$State)
statehospital<-hospitalgroup[[state]]
if(measure=="heart attack"){m<-11}
if(measure=="heart failure"){m<-17}
if(measure=="pneumonia"){m<-23}
if(num == "best"){num<-1}
if(num == "worst"){num<-nrow(statehospital)}
statehospital[,m]<-as.numeric(statehospital[,m])## coercion
com<-complete.cases(statehospital[,m])##remove NA values
statehospital<-statehospital[com,]
i<-order(statehospital[,m],statehospital[,2])
rankone<-cbind(statehospital[,m],statehospital[,2])[i,]
rankone[num,2]
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital <- function(state, measure, num = "best") {
## Read outcome data
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
## Return hospital name in that state with the given rank
## 30-day death rate
hospitalgroup<-split(outcome, outcome$State)
statehospital<-hospitalgroup[[state]]
if(measure=="heart attack"){m<-11}
if(measure=="heart failure"){m<-17}
if(measure=="pneumonia"){m<-23}
statehospital[,m]<-as.numeric(statehospital[,m])## coercion
com<-complete.cases(statehospital[,m])##remove NA values
statehospital<-statehospital[com,]
if(num == "best"){num<-1}
if(num == "worst"){num<-nrow(statehospital)}
i<-order(statehospital[,m],statehospital[,2])
rankone<-cbind(statehospital[,m],statehospital[,2])[i,]
rankone[num,2]
}
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
?stop
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
hospitalgroup<-split(outcome, outcome$State)
hospitalgroup[,11]<-as.numeric(hospitalgroup[,11])
hospitalgroup[][,11]<-as.numeric(hospitalgroup[][,11])
level(hospitalgroup)
names(hospitalgroup)
length(names(hospitalgroup))
htable<-data.frame(hospital,state)
htable<-data.frame(hospital = character(54L),state= character(54L))
htable
rankall <- function(measure, num = "best") {
## Read outcome data
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
hospitalgroup<-split(outcome, outcome$State)
if(measure=="heart attack"){m<-11}
if(measure=="heart failure"){m<-17}
if(measure=="pneumonia"){m<-23}
state<-names(hospitalgroup)
hospital <- character(54L)
state<- character(54L)
for(i in 1:54){
statehospital<-hospitalgroup[[state[i]]]
statehospital[,m]<-as.numeric(statehospital[,m])## coercion
com<-complete.cases(statehospital[,m])##remove NA values
statehospital<-statehospital[com,]
if(num == "best"){num<-1}
if(num == "worst"){num<-nrow(statehospital)}
## Return a data frame with the hospital names and the
## (abbreviated) state name
i<-order(statehospital[,m],statehospital[,2],statehospital[,7])
rankone<-cbind(statehospital[,m],statehospital[,2],statehospital[,7])[i,]
hospital[i]<-rankone[num,2]
state[i]<-rankone[num,3]
htable<-data.frame(hospital,state)
htable
}
}
head(rankall("heart attack", 20), 10)
rankall <- function(measure, num = "best") {
## Read outcome data
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
hospitalgroup<-split(outcome, outcome$State)
if(measure=="heart attack"){m<-11}
if(measure=="heart failure"){m<-17}
if(measure=="pneumonia"){m<-23}
sta<-names(hospitalgroup)
hospital <- character(54L)
state<- character(54L)
for(i in 1:54){
statehospital<-hospitalgroup[[sta[i]]]
statehospital[,m]<-as.numeric(statehospital[,m])## coercion
com<-complete.cases(statehospital[,m])##remove NA values
statehospital<-statehospital[com,]
if(num == "best"){num<-1}
if(num == "worst"){num<-nrow(statehospital)}
## Return a data frame with the hospital names and the
## (abbreviated) state name
i<-order(statehospital[,m],statehospital[,2],statehospital[,7])
rankone<-cbind(statehospital[,m],statehospital[,2],statehospital[,7])[i,]
hospital[i]<-rankone[num,2]
state[i]<-rankone[num,3]
htable<-data.frame(hospital,state)
htable
}
}
head(rankall("heart attack", 20), 10)
X<-na
x<-NA
class(x)
x<numeric(NA)
X<-numeric(N)
x<-numeric(NA)
rankall <- function(measure, num = "best") {
## Read outcome data
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
hospitalgroup<-split(outcome, outcome$State)
if(measure=="heart attack"){m<-11}
if(measure=="heart failure"){m<-17}
if(measure=="pneumonia"){m<-23}
sta<-names(hospitalgroup)
hospital <- character(54L)
state<- character(54L)
for(i in 1:54){
statehospital<-hospitalgroup[[sta[i]]]
statehospital[,m]<-as.numeric(statehospital[,m])## coercion
com<-complete.cases(statehospital[,m])##remove NA values
statehospital<-statehospital[com,]
if(num == "best"){num<-1}
if(num == "worst"){num<-nrow(statehospital)}
if(num>nrow(statehospital)){
hospital[i]<-NA
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
i<-order(statehospital[,m],statehospital[,2],statehospital[,7])
rankone<-cbind(statehospital[,m],statehospital[,2],statehospital[,7])[i,]
hospital[i]<-rankone[num,2]
state[i]<-rankone[num,3]
htable<-data.frame(hospital,state)
htable
}
}
head(rankall("heart attack", 20), 10)
rankall <- function(measure, num = "best") {
## Read outcome data
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
hospitalgroup<-split(outcome, outcome$State)
if(measure=="heart attack"){m<-11}
if(measure=="heart failure"){m<-17}
if(measure=="pneumonia"){m<-23}
sta<-names(hospitalgroup)
hospital <- character(54L)
state<- character(54L)
for(i in 1:54){
statehospital<-hospitalgroup[[sta[i]]]
statehospital[,m]<-as.numeric(statehospital[,m])## coercion
com<-complete.cases(statehospital[,m])##remove NA values
statehospital<-statehospital[com,]
if(num == "best"){num<-1}
else if(num == "worst"){num<-nrow(statehospital)}
else if(num>nrow(statehospital)){
hospital[i]<-NA
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
else {i<-order(statehospital[,m],statehospital[,2],statehospital[,7])
rankone<-cbind(statehospital[,m],statehospital[,2],statehospital[,7])[i,]
hospital[i]<-rankone[num,2]
state[i]<-rankone[num,3]}
}
htable<-data.frame(hospital,state)
}
head(rankall("heart attack", 20), 10)
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
sta<-names(hospitalgroup)
hospitalgroup<-split(outcome, outcome$State)
sta<-names(hospitalgroup)
statehospital<-hospitalgroup[[sta[3]]]
names(statehospital)
rankall <- function(measure, num = "best") {
## Read outcome data
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
hospitalgroup<-split(outcome, outcome$State)
if(measure=="heart attack"){m<-11}
if(measure=="heart failure"){m<-17}
if(measure=="pneumonia"){m<-23}
sta<-names(hospitalgroup)
hospital <- character(54L)
state<- character(54L)
for(i in 1:54){
statehospital<-hospitalgroup[[sta[i]]]
statehospital[,m]<-as.numeric(statehospital[,m])## coercion
com<-complete.cases(statehospital[,m])##remove NA values
statehospital<-statehospital[com,]
if(num == "best"){num<-1}
else if(num == "worst"){num<-nrow(statehospital)}
else if(num>nrow(statehospital)){
hospital[i]<-NA
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
else {
i<-order(statehospital[,m],statehospital[,2],statehospital[,7])
rankone<-cbind(statehospital[,m],statehospital[,2],statehospital[,7])[i,]
hospital[i]<-rankone[num,2]
state[i]<-rankone[num,3]}
}
htable<-data.frame(hospital,state)
htable
}
rankall("heart attack",
20)
stateh<-hospitalgroup$AK
statehospital<-hospitalgroup[[sta[1]]]
if(num>nrow(statehospital)){
hospital[1]<-NA
}
if(20>nrow(statehospital)){
hospital[i]<-NA
}
if(nrow(statehospital)<20){
hospital[1]<-NA
}
hospital<-character(1)
if(nrow(statehospital)<20){
hospital[1]<-NA
}
if(20>nrow(statehospital)){
hospital[1]<-1
}
rankall <- function(measure, num = "best") {
## Read outcome data
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
hospitalgroup<-split(outcome, outcome$State)
if(measure=="heart attack"){m<-11}
if(measure=="heart failure"){m<-17}
if(measure=="pneumonia"){m<-23}
sta<-names(hospitalgroup)
hospital <- character(54L)
state<- character(54L)
for(i in 1:54){
statehospital<-hospitalgroup[[sta[i]]]
statehospital[,m]<-as.numeric(statehospital[,m])## coercion
com<-complete.cases(statehospital[,m])##remove NA values
statehospital<-statehospital[com,]
if(num == "best"){num<-1}
else if(num == "worst"){num<-nrow(statehospital)}
else if(nrow(statehospital)<num){
hospital[i]<-NA
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
else {
i<-order(statehospital[,m],statehospital[,2],statehospital[,7])
rankone<-cbind(statehospital[,m],statehospital[,2],statehospital[,7])[i,]
hospital[i]<-rankone[num,2]
state[i]<-rankone[num,3]}
}
htable<-data.frame(hospital,state)
htable
}
rankall("heart attack", 20)
rankall("pneumonia", "worst")
next
?nest
?next
rankall <- function(measure, num = "best") {
## Read outcome data
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
hospitalgroup<-split(outcome, outcome$State)
if(measure=="heart attack"){m<-11}
if(measure=="heart failure"){m<-17}
if(measure=="pneumonia"){m<-23}
sta<-names(hospitalgroup)
hospital <- character(54L)
state<- character(54L)
for(i in 1:54){
statehospital<-hospitalgroup[[sta[i]]]
statehospital[,m]<-as.numeric(statehospital[,m])## coercion
com<-complete.cases(statehospital[,m])##remove NA values
statehospital<-statehospital[com,]
if(num == "best"){num<-1}
if(num == "worst"){num<-nrow(statehospital)}
if(nrow(statehospital)<num){
hospital[i]<-NA
next
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
i<-order(statehospital[,m],statehospital[,2],statehospital[,7])
rankone<-cbind(statehospital[,m],statehospital[,2],statehospital[,7])[i,]
hospital[i]<-rankone[num,2]
state[i]<-rankone[num,3]
}
htable<-data.frame(hospital,state)
htable
}
rankall("heart attack", 20),
rankall("heart attack", 20)
